#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
max(.[["time"]])
max(ds$time)
min(ds$time)
##2.2.a
# ds %>%
#   select("name","iso2") %>%
#   group_by(.[["iso2"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are two countries with iso2 codes that are NA
ds %>%
filter(is.na(iso2)) %>%
select(name) %>%
unique()
#NA is the iso2 code for 2 countires "NA" and "Namibia"
#which means that Namibia doesn't have a iso2 code and there is atleast one
#iso3 code without a name or iso2 code
##2.2.b
# ds %>%
#   select("name","iso3") %>%
#   group_by(.[["name"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are 4 iso3 codes that correspond to "NA" names
ds %>%
filter(is.na(name)) %>%
select(iso3) %>%
unique()
#this shows that 4 iso3 codes have no name: "CHANISL", "GBM", "KOS", and
#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
max($time)
##2.2.a
# ds %>%
#   select("name","iso2") %>%
#   group_by(.[["iso2"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are two countries with iso2 codes that are NA
ds %>%
filter(is.na(iso2)) %>%
select(name) %>%
unique()
#NA is the iso2 code for 2 countires "NA" and "Namibia"
#which means that Namibia doesn't have a iso2 code and there is atleast one
#iso3 code without a name or iso2 code
##2.2.b
# ds %>%
#   select("name","iso3") %>%
#   group_by(.[["name"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are 4 iso3 codes that correspond to "NA" names
ds %>%
filter(is.na(name)) %>%
select(iso3) %>%
unique()
#this shows that 4 iso3 codes have no name: "CHANISL", "GBM", "KOS", and
#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
max(time)
unique(ds$time)
##2.2.a
# ds %>%
#   select("name","iso2") %>%
#   group_by(.[["iso2"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are two countries with iso2 codes that are NA
ds %>%
filter(is.na(iso2)) %>%
select(name) %>%
unique()
#NA is the iso2 code for 2 countires "NA" and "Namibia"
#which means that Namibia doesn't have a iso2 code and there is atleast one
#iso3 code without a name or iso2 code
##2.2.b
# ds %>%
#   select("name","iso3") %>%
#   group_by(.[["name"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are 4 iso3 codes that correspond to "NA" names
ds %>%
filter(is.na(name)) %>%
select(iso3) %>%
unique()
#this shows that 4 iso3 codes have no name: "CHANISL", "GBM", "KOS", and
#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
unique()
##2.2.a
# ds %>%
#   select("name","iso2") %>%
#   group_by(.[["iso2"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are two countries with iso2 codes that are NA
ds %>%
filter(is.na(iso2)) %>%
select(name) %>%
unique()
#NA is the iso2 code for 2 countires "NA" and "Namibia"
#which means that Namibia doesn't have a iso2 code and there is atleast one
#iso3 code without a name or iso2 code
##2.2.b
# ds %>%
#   select("name","iso3") %>%
#   group_by(.[["name"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are 4 iso3 codes that correspond to "NA" names
ds %>%
filter(is.na(name)) %>%
select(iso3) %>%
unique()
#this shows that 4 iso3 codes have no name: "CHANISL", "GBM", "KOS", and
#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
select(max(time))
##2.2.a
# ds %>%
#   select("name","iso2") %>%
#   group_by(.[["iso2"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are two countries with iso2 codes that are NA
ds %>%
filter(is.na(iso2)) %>%
select(name) %>%
unique()
#NA is the iso2 code for 2 countires "NA" and "Namibia"
#which means that Namibia doesn't have a iso2 code and there is atleast one
#iso3 code without a name or iso2 code
##2.2.b
# ds %>%
#   select("name","iso3") %>%
#   group_by(.[["name"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are 4 iso3 codes that correspond to "NA" names
ds %>%
filter(is.na(name)) %>%
select(iso3) %>%
unique()
#this shows that 4 iso3 codes have no name: "CHANISL", "GBM", "KOS", and
#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
select(time)
##2.2.a
# ds %>%
#   select("name","iso2") %>%
#   group_by(.[["iso2"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are two countries with iso2 codes that are NA
ds %>%
filter(is.na(iso2)) %>%
select(name) %>%
unique()
#NA is the iso2 code for 2 countires "NA" and "Namibia"
#which means that Namibia doesn't have a iso2 code and there is atleast one
#iso3 code without a name or iso2 code
##2.2.b
# ds %>%
#   select("name","iso3") %>%
#   group_by(.[["name"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are 4 iso3 codes that correspond to "NA" names
ds %>%
filter(is.na(name)) %>%
select(iso3) %>%
unique()
#this shows that 4 iso3 codes have no name: "CHANISL", "GBM", "KOS", and
#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
select(time) %>%
max()
##2.2.a
# ds %>%
#   select("name","iso2") %>%
#   group_by(.[["iso2"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are two countries with iso2 codes that are NA
ds %>%
filter(is.na(iso2)) %>%
select(name) %>%
unique()
#NA is the iso2 code for 2 countires "NA" and "Namibia"
#which means that Namibia doesn't have a iso2 code and there is atleast one
#iso3 code without a name or iso2 code
##2.2.b
# ds %>%
#   select("name","iso3") %>%
#   group_by(.[["name"]]) %>%
#   unique() %>%
#   tally(sort = TRUE)
#this shows that there are 4 iso3 codes that correspond to "NA" names
ds %>%
filter(is.na(name)) %>%
select(iso3) %>%
unique()
#this shows that 4 iso3 codes have no name: "CHANISL", "GBM", "KOS", and
#"NLD_CURACAO"
#this all adds up too, 253 unique iso3 codes (no NA) - 4(iso3 with no name)
# = 249 names (plus 1 bc they count NA makes it 250 names) and 249 names minus
# one(Namibia) makes 248 iso2 codes (plus one because of NA again)
##2.3
ds %>%
filter(!is.na(time)) %>%
select(time) %>%
max()
ds %>%
filter(!is.na(time)) %>%
select(time) %>%
min()
##3.1
ds %>%
select(co2, co2_PC) %>%
head(3)
##3.1
ds %>%
select(co2, co2_PC) %>%
filter(is.na(co2) | is.na(co2_PC)) %>%
summarise(Total = length(.))
##3.1
ds %>%
select(co2, co2_PC) %>%
filter(is.na(co2) | is.na(co2_PC)) %>%
summarise(Total = length(co2))
##3.1
ds %>%
select(co2, co2_PC) %>%
filter(is.na(co2) | is.na(co2_PC)) %>%
summarise(Total = length(co2), Total_PC = length(co2_PC))
##3.1
ds %>%
select(co2, co2_PC) %>%
filter(is.na(co2) | is.na(co2_PC)) %>%
summarise(Total = length(co2), Total_PC = length(is.na(co2_PC)))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = length(is.na(co2)), Total_PC = length(is.na(co2_PC)))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = length(is.na(co2) == TRUE), Total_PC = length(is.na(co2_PC)))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = length(is.na(co2_PC)))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
j <- (1, 2, NULL,3)
j <- c(1, 2, NULL,3)
is.na(j)
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
#there are 2658 missing values in co2 and 2661 in co2_PC
ds %>%
group_by(time) %>%
summarise(na_count = sum(is.na(co2) == TRUE))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
#there are 2658 missing values in co2 and 2661 in co2_PC
ds %>%
group_by(time) %>%
summarise(na_count = sum(is.na(co2) == TRUE), sort = TRUE)
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
#there are 2658 missing values in co2 and 2661 in co2_PC
ds %>%
group_by(time) %>%
summarise(na_count = sum(is.na(co2) == TRUE + is.na(co2_PC) == TRUE))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
#there are 2658 missing values in co2 and 2661 in co2_PC
ds %>%
group_by(time) %>%
summarise(na_count = sum(is.na(co2) == TRUE) + sum(is.na(co2_PC) == TRUE))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
#there are 2658 missing values in co2 and 2661 in co2_PC
ds %>%
group_by(time) %>%
summarise(na_count = sum(is.na(co2) == TRUE) + sum(is.na(co2_PC) == TRUE)) %>%
arrange(desc(na_count))
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
#there are 2658 missing values in co2 and 2661 in co2_PC
ds %>%
group_by(time) %>%
summarise(na_count = sum(is.na(co2) == TRUE) + sum(is.na(co2_PC) == TRUE)) %>%
arrange(desc(na_count)) %>%
head(4)
##3.1
ds %>%
select(co2, co2_PC) %>%
summarise(Total = sum(is.na(co2) == TRUE), Total_PC = sum(is.na(co2_PC) == TRUE))
#there are 2658 missing values in co2 and 2661 in co2_PC
ds %>%
group_by(time) %>%
summarise(na_count = sum(is.na(co2) == TRUE) + sum(is.na(co2_PC) == TRUE)) %>%
arrange(desc(na_count)) %>%
head(5)
ds$name
unique(ds$name)
##3.2
ds %>%
filter(name = ("United States of America"))
##3.2
ds %>%
filter(name == ("United States of America")) %>%
group_by(name) %>%
ggplot(aes(co2, time))
##3.2
ds %>%
filter(name == ("United States of America")) %>%
group_by(name) %>%
ggplot(aes(time, co2)) %>%
labs(title = "Emissions Over Time by Country")
##3.2
ds %>%
filter(name == ("United States of America")) %>%
# group_by(name) %>%
ggplot(aes(time, co2)) %>%
labs(title = "Emissions Over Time by Country")
##3.2
ds %>%
filter(name == ("United States of America")) %>%
# group_by(name) %>%
ggplot(aes(time, co2)) %>%
labs(title = "Emissions Over Time by Country")
##3.2
ds %>%
filter(name == ("United States of America")) %>%
ggplot(aes(time, co2)) %>%
labs(title = "Emissions Over Time by Country")
##3.2
ds %>%
filter(name == ("United States of America")) %>%
head(2)
ggplot(aes(time, co2)) %>%
labs(title = "Emissions Over Time by Country")
##3.2
ds %>%
filter(name == ("United States of America")) %>%
plot(time ~ co2, data= .,main="Emissions Over Time by Country")
# ggplot(aes(time, co2)) %>%
# labs(title = "")
##3.2
ds %>%
filter(name == ("United States of America")) %>%
plot(co2 ~ time , data= .,main="Emissions Over Time by Country")
# ggplot(aes(time, co2)) %>%
# labs(title = "")
?plot()
?plot()
##3.2
ds %>%
filter(name == ("United States of America")) %>%
plot(co2 ~ time , data= .,main="Emissions Over Time by Country", type = "l")
# ggplot(aes(time, co2)) %>%
# labs(title = "")
##3.2
ds %>%
filter(name == "United States of America" | "China" | "India" | "Canada" | "Sweden") %>%
plot(co2 ~ time , data= .,main="Emissions Over Time by Country", type = "l")
##3.2
ds %>%
filter(name == c("United States of America" , "China" , "India" , "Canada" , "Sweden")) %>%
plot(co2 ~ time , data= .,main="Emissions Over Time by Country", type = "l")
# ggplot(aes(time, co2)) %>%
# labs(title = "")
orange %>%
group_by(Tree) %>%
filter(rank(desc(age)) == 1) %>%
ggplot() +
geom_col(aes(x = Tree, y = circumference))
##3.2
ds %>%
filter(name == c("United States of America" , "China" , "India" , "Canada" , "Sweden")) %>%
ggplot() +
geom_col(aes(x = time, y = co2))
install.packages("evaluate")
install.packages("evaluate")
##3.2
ds %>%
filter(name == c("United States of America" , "China" , "India" , "Canada" , "Sweden")) %>%
ggplot() +
geom_col(aes(x = time, y = co2))
shiny::runApp('C:/Users/miles/INFO201-WIN23/ps06')
ds %>%
filter(temp <= 2 | temp >= -2)
runApp('C:/Users/miles/INFO201-WIN23/ps06')
ds <- read_delim("UAH-lower-troposphere-long.csv.bz2")
ds <- read_delim("UAH-lower-troposphere-long.csv.bz2")
getwd()
setwd("../..")
getwd()
setwd("INFO201-WIN23/ps06")
ds <- read_delim("UAH-lower-troposphere-long.csv.bz2")
ds %>%
filter(temp <= 2 | temp >= -2)
ds %>%
filter(temp <= -2 | temp >= 2)
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(tidyverse)
ds <- read_delim("UAH-lower-troposphere-long.csv.bz2")
ui <- fluidPage(
titlePanel("Global Temperature Data"),
sidebarLayout(
sidebarPanel(
sliderInput("year","Year:",min = 1978 ,max = 2023,value = 30)),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("main"),
tabPanel("graph",
plotOutput("plot")),
tabPanel("table",
tableOutput("ltData")))
)))
server <- function(input, output) {
output$plot <- renderPlot({
years <- input$year
ds %>%
filter(temp <= -3 | temp >= 3) %>%
filter(year == years) %>%
ggplot() +
geom_point(aes(x = month, y = temp, col=region)) +
xlim(1,12) +
ylim(-3,3)+
labs(title = "temp by month",
y = "Tempurture",
x = 'month')
# # generate bins based on input$bins from ui.R
# x    <- ds[, 2]
# bins <- seq(min(x), max(x), length.out = input$bins + 1)
#
# # draw the histogram with the specified number of bins
# hist(x, breaks = bins, col = 'darkgray', border = 'white',
#      xlab = 'Waiting time to next eruption (in mins)',
#      main = 'Histogram of waiting times')
})
output$ltdata <- renderTable ({
ds %>%
filter(year == years)
})
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
